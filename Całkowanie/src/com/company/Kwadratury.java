package com.company;

public class Kwadratury {

    double Funkcja(double x)
    {
        return (Math.sqrt(x*x + 0.3))/(1.4+Math.sqrt(0.8*x*x+1.6));
    }

    double Oblicz(double a, double b, int n)
    {

        double F = (b-a) / 2;
        double F2 = (b+a) / 2;
        double temp = 0;
        double temp2 = 0;
        double wynik = 0;


        double[] wi = new double[n];
        double[] ti = new double[n];

        if(n == 2)
        {
            
            wi[0] = 1.0000000000000000; ti[0] = -0.5773502691896257;
            wi[1] = 1.0000000000000000; ti[1] = 0.5773502691896257;

        }

        if(n == 4)
        {
            wi[0] = 0.6521451548625461;	ti[0] = -0.3399810435848563;
            wi[1] =	0.6521451548625461;	ti[1] = 0.3399810435848563;
            wi[2] =	0.3478548451374538;	ti[2] = -0.8611363115940526;
            wi[3] =	0.3478548451374538;	ti[3] = 0.8611363115940526;
        }

        if(n == 6)
        {
            wi[0] =	0.3607615730481386;	ti[0] = 0.6612093864662645;
            wi[1] =	0.3607615730481386;	ti[1] = -0.6612093864662645;
            wi[2] = 0.4679139345726910;	ti[2] = -0.2386191860831969;
            wi[3] =	0.4679139345726910;	ti[3] = 0.2386191860831969;
            wi[4] =	0.1713244923791704;	ti[4] = -0.9324695142031521;
            wi[5] =	0.1713244923791704;	ti[5] =0.9324695142031521;
        }
        if (n==8){
            wi[0] = 0.3626837833783620; ti[0] = -0.1834346424956498;
            wi[1] = 0.3626837833783620; ti[1] = 0.1834346424956498;
            wi[2] = 0.3137066458778873; ti[2] = -0.5255324099163290;
            wi[3] = 0.3137066458778873; ti[3] = 0.5255324099163290;
            wi[4] = 0.2223810344533745; ti[4] = -0.7966664774136267;
            wi[5] = 0.2223810344533745; ti[5] = 0.7966664774136267;
            wi[6] = 0.1012285362903763; ti[6] = -0.9602898564975363;
            wi[7] = 0.1012285362903763; ti[7] = 0.9602898564975363;

        }

        if (n==16) {
            wi[0] = 0.1894506104550685; ti[0] = -0.0950125098376374;
            wi[1] = 0.1894506104550685; ti[1] = 0.0950125098376374;
            wi[2] = 0.1826034150449236; ti[2] = -0.2816035507792589;
            wi[3] = 0.1826034150449236; ti[3] = 0.2816035507792589;
            wi[4] = 0.1691565193950025; ti[4] = -0.4580167776572274;
            wi[5] = 0.1691565193950025; ti[5] = 0.4580167776572274;
            wi[6] = 0.1495959888165767; ti[6] = -0.6178762444026438;
            wi[7] = 0.1495959888165767; ti[7] = 0.6178762444026438;
            wi[8] = 0.1246289712555339; ti[8] = -0.7554044083550030;
            wi[9] = 0.1246289712555339; ti[9] = 0.7554044083550030;
            wi[10] = 0.0951585116824928; ti[10] = -0.8656312023878318;
            wi[11] = 0.0951585116824928; ti[11] = 0.8656312023878318;
            wi[12] = 0.0622535239386479; ti[12] = -0.9445750230732326;
            wi[13] = 0.0622535239386479; ti[13] = 0.9445750230732326;
            wi[14] = 0.0271524594117541; ti[14] = -0.9894009349916499;
            wi[15] = 0.0271524594117541; ti[15] = 0.9894009349916499;

        }
        double z = 0;

        for(int i = 0; i < n; i++)
        {
            temp = (F * ti[i] + F2);
            z = wi[i] * Funkcja(temp);
            temp2 = temp2 + z;
        }
        wynik = F * temp2;

        return wynik;
    }
}
